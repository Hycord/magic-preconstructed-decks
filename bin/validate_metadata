#!/usr/bin/env ruby

require "pathname-glob"

class ValidateMetadata
  def data_root
    @data_root ||= Pathname(__dir__) + "../data"
  end

  def deck_files
    data_root.glob("*/*/*.txt")
  end

  def call
    deck_files.each do |path|
      relative_path = path.relative_path_from(@data_root)

      title_from_path = path.basename(".txt").to_s.gsub(/(?<! )- /, ': ')
      title_from_file = nil
      source = []
      comment_lines = path.readlines.map(&:chomp).grep(%r[\A//])
      comment_lines.each do |line|
        if line =~ %r[\A// NAME: (.*)]
          warn "#{relative_path}: Multiple titles in file" if title_from_file
          title_from_file = $1
        elsif line =~ %r[\A// SOURCE: .*]
          source << $1
        end
      end

      if source.empty?
        warn "#{relative_path}: no source provided"
      end
      if title_from_file.tr("/", "-") != title_from_path
        if normalize(title_from_file.tr("/", "-")) == normalize(title_from_path)
          warn "#{relative_path}: titles mismatch #{title_from_path.inspect} ~= #{title_from_file.inspect} (special characters only)"
        else
          warn "#{relative_path}: titles mismatch #{title_from_path.inspect} ~= #{title_from_file.inspect}"
        end
      end
      if title_from_file == title_from_file.upcase
        warn "#{relative_path}: All capital title"
      end
    end
  end

  def normalize(title)
    title.gsub(/:|!|,|'/, "")
  end
end

ValidateMetadata.new.call
